{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jnynt\\\\Desktop\\\\AifSR\\\\webapp\\\\frontend\\\\src\\\\ImageWindow.js\";\nimport * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Container, Typography, Button } from '@mui/material';\nimport { useImage } from 'react-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageWindow(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    fixed: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: '100%',\n      height: 500,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        backgroundColor: 'secondary.main',\n        borderRadius: 3,\n        border: 1,\n        borderStyle: 'solid'\n      },\n      children: /*#__PURE__*/_jsxDEV(CenterItem, {\n        uploadStatus: props.uploadStatus,\n        prevImage: props.prevImage,\n        nextImage: props.nextImage,\n        image: props.image,\n        mask: props.mask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n} // function MyImage() {\n//     const {src} = useImage({\n//       srcList: 'http://localhost:5000/get_image/1',\n//     })\n//     return <img src={src}  style={{margin: 10}}width={450} height={400}/>\n// }\n// function MyMask() {\n//     const {src} = useImage({\n//       srcList: 'http://localhost:5000/get_mask/1',\n//     })\n//     return <img src={src}  style={{margin: 10}}width={450} height={400}/>\n// }\n\n_c = ImageWindow;\n\nfunction CenterItem(props) {\n  if (props.uploadStatus === \"not_uploaded\") {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"output image preview will be shown here after uploading.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  } else if (props.uploadStatus === \"processing\") {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    //const imgSrc = 'http://localhost:5000/get_image/' + (Math.random()* 100000).toString;\n    //const maskSrc = 'http://localhost:5000/get_mask/' + (Math.random()* 100000).toString;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'data:image/png;base64,${props.image}',\n            style: {\n              margin: 10\n            },\n            width: 450,\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'data:image/png;base64,${props.mask}',\n            style: {\n              margin: 10\n            },\n            width: 450,\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.prevImage,\n            fullWidth: true,\n            children: \"Previous Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.nextImage,\n            fullWidth: true,\n            children: \"Next Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c2 = CenterItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageWindow\");\n$RefreshReg$(_c2, \"CenterItem\");","map":{"version":3,"sources":["C:/Users/jnynt/Desktop/AifSR/webapp/frontend/src/ImageWindow.js"],"names":["React","Grid","Box","CircularProgress","Container","Typography","Button","useImage","ImageWindow","props","backgroundColor","borderRadius","border","borderStyle","uploadStatus","prevImage","nextImage","image","mask","CenterItem","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { Container, Typography, Button} from '@mui/material';\r\nimport {useImage} from 'react-image'\r\n\r\nexport default function ImageWindow(props){\r\n    return(\r\n        <Container maxWidth='lg' fixed>\r\n            <Box \r\n                width={'100%'}\r\n                height={500}\r\n                display=\"flex\" \r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                sx={{backgroundColor: 'secondary.main',\r\n                    borderRadius: 3,\r\n                    border: 1,\r\n                    borderStyle: 'solid'\r\n                }}>\r\n                <CenterItem uploadStatus={props.uploadStatus} prevImage={props.prevImage} nextImage={props.nextImage} image={props.image} mask={props.mask}/>\r\n                \r\n            </Box>\r\n        </Container>\r\n    );    \r\n}\r\n\r\n// function MyImage() {\r\n//     const {src} = useImage({\r\n//       srcList: 'http://localhost:5000/get_image/1',\r\n//     })\r\n   \r\n//     return <img src={src}  style={{margin: 10}}width={450} height={400}/>\r\n// }\r\n\r\n// function MyMask() {\r\n//     const {src} = useImage({\r\n//       srcList: 'http://localhost:5000/get_mask/1',\r\n//     })\r\n   \r\n//     return <img src={src}  style={{margin: 10}}width={450} height={400}/>\r\n// }\r\n\r\n\r\nfunction CenterItem(props){\r\n    if (props.uploadStatus === \"not_uploaded\"){\r\n        return(\r\n            <Typography>output image preview will be shown here after uploading.</Typography>\r\n        );\r\n    }else if (props.uploadStatus === \"processing\"){\r\n        return(\r\n            <CircularProgress color=\"primary\" />\r\n        );\r\n    }else{\r\n        //const imgSrc = 'http://localhost:5000/get_image/' + (Math.random()* 100000).toString;\r\n        //const maskSrc = 'http://localhost:5000/get_mask/' + (Math.random()* 100000).toString;\r\n        return(\r\n            <Container maxWidth='xl'>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    {/* <MyImage/> */}\r\n                    <img src={'data:image/png;base64,${props.image}'} style={{margin: 10}}width={450} height={400}></img>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    {/* <MyMask/> */}\r\n                    <img src={'data:image/png;base64,${props.mask}'} style={{margin: 10}} width={450} height={400} ></img>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <Button variant=\"outlined\" onClick={props.prevImage} fullWidth>Previous Image</Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Button variant=\"outlined\" onClick={props.nextImage} fullWidth>Next Image</Button>\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}