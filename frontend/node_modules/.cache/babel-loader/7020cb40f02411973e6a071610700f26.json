{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jnynt\\\\Desktop\\\\AifSR\\\\webapp\\\\frontend\\\\src\\\\ImageWindow.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Container, Typography, Button } from '@mui/material';\nimport { useImage } from 'react-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageWindow(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    fixed: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: '100%',\n      height: 500,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        backgroundColor: 'secondary.main',\n        borderRadius: 3,\n        border: 1,\n        borderStyle: 'solid'\n      },\n      children: /*#__PURE__*/_jsxDEV(CenterItem, {\n        uploadStatus: props.uploadStatus,\n        prevImage: props.prevImage,\n        nextImage: props.nextImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = ImageWindow;\n\nfunction MyImage() {\n  _s();\n\n  const {\n    src\n  } = useImage({\n    srcList: 'http://localhost:5000/get_image/1'\n  });\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: src,\n    style: {\n      margin: 10\n    },\n    width: 450,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n\n_s(MyImage, \"zXNnp/u4qBUdnWU9v8lf9VaL5fQ=\", false, function () {\n  return [useImage];\n});\n\n_c2 = MyImage;\n\nfunction MyMask() {\n  _s2();\n\n  const {\n    src\n  } = useImage({\n    srcList: 'http://localhost:5000/get_mask/1'\n  });\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: src,\n    style: {\n      margin: 10\n    },\n    width: 450,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(MyMask, \"zXNnp/u4qBUdnWU9v8lf9VaL5fQ=\", false, function () {\n  return [useImage];\n});\n\n_c3 = MyMask;\n\nfunction CenterItem(props) {\n  if (props.uploadStatus === \"not_uploaded\") {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"output image preview will be shown here after uploading.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  } else if (props.uploadStatus === \"processing\") {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    const imgSrc = 'http://localhost:5000/get_image/' + (Math.random() * 100000).toString;\n    const maskSrc = 'http://localhost:5000/get_mask/' + (Math.random() * 100000).toString;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(MyImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(MyMask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.prevImage,\n            fullWidth: true,\n            children: \"Previous Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.nextImage,\n            fullWidth: true,\n            children: \"Next Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c4 = CenterItem;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ImageWindow\");\n$RefreshReg$(_c2, \"MyImage\");\n$RefreshReg$(_c3, \"MyMask\");\n$RefreshReg$(_c4, \"CenterItem\");","map":{"version":3,"sources":["C:/Users/jnynt/Desktop/AifSR/webapp/frontend/src/ImageWindow.js"],"names":["React","Grid","Box","CircularProgress","Container","Typography","Button","useImage","ImageWindow","props","backgroundColor","borderRadius","border","borderStyle","uploadStatus","prevImage","nextImage","MyImage","src","srcList","margin","MyMask","CenterItem","imgSrc","Math","random","toString","maskSrc"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { Container, Typography, Button} from '@mui/material';\r\nimport {useImage} from 'react-image'\r\n\r\nexport default function ImageWindow(props){\r\n    return(\r\n        <Container maxWidth='lg' fixed>\r\n            <Box \r\n                width={'100%'}\r\n                height={500}\r\n                display=\"flex\" \r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                sx={{backgroundColor: 'secondary.main',\r\n                    borderRadius: 3,\r\n                    border: 1,\r\n                    borderStyle: 'solid'\r\n                }}>\r\n                <CenterItem uploadStatus={props.uploadStatus} prevImage={props.prevImage} nextImage={props.nextImage}/>\r\n                \r\n            </Box>\r\n        </Container>\r\n    );    \r\n}\r\n\r\nfunction MyImage() {\r\n    const {src} = useImage({\r\n      srcList: 'http://localhost:5000/get_image/1',\r\n    })\r\n   \r\n    return <img src={src}  style={{margin: 10}}width={450} height={400}/>\r\n}\r\n\r\nfunction MyMask() {\r\n    const {src} = useImage({\r\n      srcList: 'http://localhost:5000/get_mask/1',\r\n    })\r\n   \r\n    return <img src={src}  style={{margin: 10}}width={450} height={400}/>\r\n}\r\n\r\n\r\nfunction CenterItem(props){\r\n    if (props.uploadStatus === \"not_uploaded\"){\r\n        return(\r\n            <Typography>output image preview will be shown here after uploading.</Typography>\r\n        );\r\n    }else if (props.uploadStatus === \"processing\"){\r\n        return(\r\n            <CircularProgress color=\"primary\" />\r\n        );\r\n    }else{\r\n        const imgSrc = 'http://localhost:5000/get_image/' + (Math.random()* 100000).toString;\r\n        const maskSrc = 'http://localhost:5000/get_mask/' + (Math.random()* 100000).toString;\r\n        return(\r\n            <Container maxWidth='xl'>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <MyImage/>\r\n                    {/* <img src={imgSrc} style={{margin: 10}}width={450} height={400}></img> */}\r\n                    {/* <Box sx={{width: 475, height: 400}} backgroundImage={testImage} position='relative'/> */}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <MyMask/>\r\n                    {/* <img src={maskSrc} style={{margin: 10}} width={450} height={400} ></img> */}\r\n                    {/* <Box sx={{width: 475, height: 400}} backgroundImage={testImage} position='relative'/> */}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <Button variant=\"outlined\" onClick={props.prevImage} fullWidth>Previous Image</Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Button variant=\"outlined\" onClick={props.nextImage} fullWidth>Next Image</Button>\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}