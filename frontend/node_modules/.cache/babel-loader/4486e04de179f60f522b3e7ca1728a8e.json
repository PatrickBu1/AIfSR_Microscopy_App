{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jnynt\\\\Desktop\\\\AifSR\\\\webapp\\\\frontend\\\\src\\\\Inference.js\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport UserForm from './UserForm';\nimport axios from 'axios';\nimport ImageWindow from './ImageWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPLOAD_URL = 'http://localhost:5000/upload';\nexport default class Inference extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadStatus: \"not_uploaded\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(imagew, imageh, uploadFiles) {\n    const formData = new FormData();\n\n    for (let i = 0; i < uploadFiles.files.length; i++) {\n      formData.append(\"file\", uploadFiles.files[i]);\n    }\n\n    formData.append(\"imagew\", imagew);\n    formData.append(\"imageh\", imageh);\n    this.setState({\n      uploadStatus: \"processing\"\n    });\n    axios.post(UPLOAD_URL, formData).then(res => {\n      this.setState({\n        uploadStatus: \"done\"\n      });\n      console.log(\"file upload success\");\n    }).catch(err => alert(\"File Upload Error\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(UserForm, {\n          submitCallback: (imagew, imageh, files) => this.handleSubmit(imagew, imageh, files)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(ImageWindow, {\n          image: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jnynt/Desktop/AifSR/webapp/frontend/src/Inference.js"],"names":["React","Button","Grid","Box","Typography","Container","UserForm","axios","ImageWindow","UPLOAD_URL","Inference","Component","constructor","props","state","uploadStatus","handleSubmit","bind","imagew","imageh","uploadFiles","formData","FormData","i","files","length","append","setState","post","then","res","console","log","catch","err","alert","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,UAAU,GAAG,8BAAnB;AAEA,eAAe,MAAMC,SAAN,SAAwBV,KAAK,CAACW,SAA9B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,MAAD,EAASC,MAAT,EAAiBC,WAAjB,EAA6B;AACrC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACI,KAAZ,CAAkBC,MAAtC,EAA8CF,CAAC,EAA/C,EAAkD;AAC9CF,MAAAA,QAAQ,CAACK,MAAT,CAAgB,MAAhB,EAAwBN,WAAW,CAACI,KAAZ,CAAkBD,CAAlB,CAAxB;AACH;;AACDF,IAAAA,QAAQ,CAACK,MAAT,CAAgB,QAAhB,EAA0BR,MAA1B;AACAG,IAAAA,QAAQ,CAACK,MAAT,CAAgB,QAAhB,EAA0BP,MAA1B;AAEA,SAAKQ,QAAL,CAAc;AAACZ,MAAAA,YAAY,EAAE;AAAf,KAAd;AACAR,IAAAA,KAAK,CAACqB,IAAN,CAAWnB,UAAX,EAAuBY,QAAvB,EAAiCQ,IAAjC,CAAuCC,GAAD,IAAS;AAC3C,WAAKH,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAAE;AAAf,OAAd;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,KAHD,EAGGC,KAHH,CAGUC,GAAD,IAASC,KAAK,CAAC,mBAAD,CAHvB;AAIH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,cAAc,EAAE,CAAClB,MAAD,EAASC,MAAT,EAAiBK,KAAjB,KAA2B,KAAKR,YAAL,CAAkBE,MAAlB,EAA0BC,MAA1B,EAAkCK,KAAlC;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAIA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AArCiD","sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport UserForm from './UserForm';\r\nimport axios from 'axios';\r\nimport ImageWindow from './ImageWindow';\r\n\r\nconst UPLOAD_URL = 'http://localhost:5000/upload';\r\n\r\nexport default class Inference extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            uploadStatus: \"not_uploaded\"\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(imagew, imageh, uploadFiles){\r\n        const formData = new FormData();\r\n        for (let i = 0; i < uploadFiles.files.length; i++){\r\n            formData.append(\"file\", uploadFiles.files[i]);\r\n        }\r\n        formData.append(\"imagew\", imagew);\r\n        formData.append(\"imageh\", imageh)\r\n\r\n        this.setState({uploadStatus: \"processing\"})\r\n        axios.post(UPLOAD_URL, formData).then((res) => {\r\n            this.setState({uploadStatus: \"done\"})\r\n            console.log(\"file upload success\")\r\n        }).catch((err) => alert(\"File Upload Error\"));\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n                <UserForm submitCallback={(imagew, imageh, files) => this.handleSubmit(imagew, imageh, files)}/>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <ImageWindow image={0}/>\r\n            </Grid>\r\n            </Grid>\r\n            \r\n        );\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}